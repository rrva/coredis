plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'jacoco'
    id 'idea'
}

group 'se.rrva'
version '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    compile "io.ktor:ktor-network:1.2.6"
    testCompile 'junit:junit:4.13'
    testCompile "org.testcontainers:testcontainers:1.12.4"
    testCompile "org.testcontainers:toxiproxy:1.12.4"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.3.3'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'
    testImplementation "io.mockk:mockk:1.9.3"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    integration {
        kotlin.srcDir "$projectDir/src/integration/kotlin"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integration.kotlin.srcDirs
        testSourceDirs += project.sourceSets.integration.resources.srcDirs
    }
}


task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

jacoco {
    toolVersion = "0.8.5"
}

compileIntegrationKotlin {
    kotlinOptions.jvmTarget = "1.8"
}